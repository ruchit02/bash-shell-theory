::Arithmetic Expressions
------------------------

	Follow the general format for variable assignment:

		let "VARIABLE=integer_expresson"

	To embed integer calculations within a command:

		$((integer_expression))
		
	::Operators Allowed in Korn/Bash Integer Expressions
	----------------------------------------------------
	
		● Logical operators return 1 for true and 0 for false
		● This list is from highest to lowest operator precedence
		
			- 					unary minus (negates the following value)
			
			! ~ 				logical NOT, binary one's complement
			
			* / % 				multiply, divide, modulus (remainder operation)
			
			+ - 				add, subtract
			
			>> << 				right, left shift, for example:
								$((32 >> 2))
								gives 8 (right shift 32 by 2 bits is the same as division by 4)
			
			<= >= 				less than or equal to, greater than or equal to
			
			> < 				greater than, less than
			
			== != 				equal to, not equal to
			
			& 					bitwise AND operation, for example:
								$((5 & 3))
								converts 5 to binary 101 and 3 to binary 011 and ANDs the bits to
								give 1 as the result
			
			^ 					bitwise exclusive OR operation
			
			| 					bitwise regular OR operation
			
			&& 					logical AND
			
			|| 					logical OR
			
			*= /= %= 			C programming type assignment, for example,
								$((a *= 2))
								means multiply variable a * 2, save result in a, and substitute result
			
			= += -= 			more C programming type assignments
			
			>>= <<= 			more C programming type assignments using shift right, shift left
			
			&= ^= |= 			more C programming type assignments using AND, exclusive OR,
								regular OR